dpdk.org
downloads
http://dpdk.org/browse/apps/pktgen-dpdk/

mellanox community:
https://community.mellanox.com/docs/DOC-2506
============================================
sudo apt-get install libpcap-dev


git clone git://dpdk.org/apps/pktgen-dpdk

RTE_SDK=/home/igorle/dev/dpdk-17.05/ RTE_TARGET=build make


sudo RTE_SDK=/home/igorle/dev/dpdk-17.05 RTE_TARGET=build tools/setup.sh

sudo ./app/app/x86_64-native-linuxapp-gcc/pktgen -c 0xfffff -w 3:00.0,txq_inline=256,txqs_min_inline=4 -w 3:00.1,txq_inline=256,txqs_min_inline=4 -- -T -P -m "[0:1-8].[0-1]"

sudo ./app/build/pktgen -c 0xfffff -w 05:00.0,txq_inline=256,txqs_min_inline=4 -w 0b:00.0,txq_inline=256,txqs_min_inline=4 -- -T -P -m "[0:1-8].[0-1]"
sudo ./app/build/pktgen -c 0xfffff -w 05:00.0,txq_inline=256,txqs_min_inline=4 -w 0b:00.0,txq_inline=256,txqs_min_inline=4 -- -T -P -m "[1:2].0"


sudo ./app/build/pktgen -c 0x1f -n 3 -w 05:00.0 -- -T -P -m "[1:2].0"
sudo ./app/build/pktgen -c 0x1f -l 0-4 -n 3 -w 05:00.0 -- -T -P -m "[1:2].0"
sudo ./app/build/pktgen -c 0x1f -l 0-4 -n 3 -w 05:00.0 -- -T -P -m "[1:3].0" -f my_test/set_seq.cmd
sudo ./app/build/pktgen -c 0x1f -l 0-4 -n 5 -w 05:00.0 -w 88:00.0 -- -T -P -m "[1:3].0, [2:4].1"


commands:
=========
start all
stop all
set all rate 19
set all size 128
set all proto udp
set all count 1
set all count 0

RSS:
enable all range
range all src port 1000 1000 1024 1
range all size 128 128 128 0

enable 0 capture
disable all capture

==============================================
For Loopback:
send     ens1fo 05:00.0
receive  ens2fo 0b:00.0
sudo ./app/build/pktgen -c 0x1f  -l 0-4 -n 5 -w 05:00.0 -w 0b:00.0 -- -T -P -m "[1:3].0, [2:4].1" -f my_test/set_seq.cmd
sudo ./app/build/pktgen -c 0x1ff -l 0-8 -n 9 -w 05:00.0 -w 0b:00.0 -- -T -P -m "[1-2:3-4].0, [5-6:7-8].1" -f my_test/set_seq.cmd  [8G bidirect]
sudo ./app/build/pktgen -c 0x1ff -l 0-8 -n 9 -w 05:00.0 -w 0b:00.0 -- -T -P -m "[1-2:3-4].0, [5-6:7-8].1" -s 0:pcap/large.pcap -s 1:pcap/large.pcap
sudo ./app/build/pktgen -c 0x1ff -l 0-8 -n 9 -w 05:00.0 -w 0b:00.0 -- -T -P -m "[1-2:3-4].0, [5-6:7-8].1" -s 0:pcap/traffic_sample.pcap -s 1:pcap/traffic_sample.pcap

server2
sudo ./build/app/testpmd --log-level=9 -w 0b:00.0 -w 05:00.0 -- --port-topology=chained -i
> start
sudo ./build/app/testpmd --log-level=9 -w 0b:00.0 -w 05:00.0 -- --port-topology=chained -i --eth-peer=1,02:03:04:fa:fe:01
TODO --eth-peer=

/root/igorle/dpdk/build/app/testpmd -w 00:05.0 -w 00:06.0 -- -i -a
show port stats all
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

HW loopback
send    ens3f0 08:00.0
receive ens3f1 08:00.1
sudo ./app/build/pktgen -c 0x1f  -l 0-4 -n 5 -w 08:00.0 -w 08:00.1 -- -T -P -m "[1:3].0, [2:4].1" -f my_test/set_seq.cmd
sudo ./app/build/pktgen -c 0x1ff -l 0-8 -n 9 -w 08:00.0 -w 08:00.1 -- -T -P -m "[1-2:3-4].0, [5-6:7-8].1" -s 0:pcap/large.pcap -s 1:pcap/large.pcap
sudo ./app/build/pktgen -c 0x1ff -l 0-8 -n 9 -w 08:00.0 -w 08:00.1 -- -T -P -m "[1-2:3-4].0, [5-6:7-8].1" -s 0:pcap/traffic_sample.pcap -s 1:pcap/traffic_sample.pcap

=============================================
testpmd for validation
sudo ./build/app/testpmd -w 0b:00.0 -w  84:00.0 -- --rxq 4 --txq 4

===============================================
TREX
git clone https://github.com/cisco-system-traffic-generator/trex-core.git


cd linux_dpdk
./b configure  (only once)
./b build


sudo ./scripts/dpdk_setup_ports.py -i

apt-get install python-yaml

===========================================
make network sterile
S1
#ip tables deny all
#iptables -A OUTPUT -o eth1 -j DROP
#iptables -I OUTPUT -o eth1 -j DROP
iptables -L OUTPUT -v
iptables -A OUTPUT -o ens4f0 -j DROP
iptables -A OUTPUT -o ens1f0 -j DROP
iptables -A OUTPUT -o ens+ -j DROP
ip6tables -L OUTPUT -v
#ip6tables -A OUTPUT -o ens4f0 -j DROP
#ip6tables -A OUTPUT -o ens1f0 -j DROP
ip6tables -A OUTPUT -o ens+ -j DROP

ifconfig ens1f0 0.0.0.0 down
ifconfig ens4f0 0.0.0.0 down
